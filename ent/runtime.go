// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/hsndmr/go-sanctum/ent/personalaccesstoken"
	"github.com/hsndmr/go-sanctum/ent/schema"
	"github.com/hsndmr/go-sanctum/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	personalaccesstokenFields := schema.PersonalAccessToken{}.Fields()
	_ = personalaccesstokenFields
	// personalaccesstokenDescToken is the schema descriptor for token field.
	personalaccesstokenDescToken := personalaccesstokenFields[2].Descriptor()
	// personalaccesstoken.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	personalaccesstoken.TokenValidator = personalaccesstokenDescToken.Validators[0].(func(string) error)
	// personalaccesstokenDescCreatedAt is the schema descriptor for created_at field.
	personalaccesstokenDescCreatedAt := personalaccesstokenFields[6].Descriptor()
	// personalaccesstoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	personalaccesstoken.DefaultCreatedAt = personalaccesstokenDescCreatedAt.Default.(func() time.Time)
	// personalaccesstokenDescUpdatedAt is the schema descriptor for updated_at field.
	personalaccesstokenDescUpdatedAt := personalaccesstokenFields[7].Descriptor()
	// personalaccesstoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	personalaccesstoken.DefaultUpdatedAt = personalaccesstokenDescUpdatedAt.Default.(func() time.Time)
	// personalaccesstoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	personalaccesstoken.UpdateDefaultUpdatedAt = personalaccesstokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[3].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[4].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}
